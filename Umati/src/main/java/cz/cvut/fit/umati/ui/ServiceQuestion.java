package cz.cvut.fit.umati.ui;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.RichTextArea;
import com.vaadin.ui.TextField;

public class ServiceQuestion extends CustomComponent {
	@AutoGenerated
	private GridLayout mainLayout;

	@AutoGenerated
	private RichTextArea serviceDescription;

	@AutoGenerated
	private Label serviceDescriptionLabel;

	@AutoGenerated
	private TextField serviceName;

	@AutoGenerated
	private Label serviceNameLabel;

	@AutoGenerated
	private TextField serviceUrl;

	@AutoGenerated
	private Label serviceNameUrl;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ServiceQuestion() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private GridLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new GridLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		mainLayout.setColumns(2);
		mainLayout.setRows(3);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// serviceNameUrl
		serviceNameUrl = new Label();
		serviceNameUrl.setImmediate(false);
		serviceNameUrl.setWidth("-1px");
		serviceNameUrl.setHeight("-1px");
		serviceNameUrl.setValue("Service URL");
		mainLayout.addComponent(serviceNameUrl, 0, 0);
		mainLayout.setComponentAlignment(serviceNameUrl, new Alignment(6));
		
		// serviceUrl
		serviceUrl = new TextField();
		serviceUrl.setImmediate(false);
		serviceUrl.setWidth("-1px");
		serviceUrl.setHeight("24px");
		mainLayout.addComponent(serviceUrl, 1, 0);
		
		// serviceNameLabel
		serviceNameLabel = new Label();
		serviceNameLabel.setImmediate(false);
		serviceNameLabel.setWidth("-1px");
		serviceNameLabel.setHeight("-1px");
		serviceNameLabel.setValue("Service Name");
		mainLayout.addComponent(serviceNameLabel, 0, 1);
		mainLayout.setComponentAlignment(serviceNameLabel, new Alignment(6));
		
		// serviceName
		serviceName = new TextField();
		serviceName.setImmediate(false);
		serviceName.setWidth("-1px");
		serviceName.setHeight("-1px");
		mainLayout.addComponent(serviceName, 1, 1);
		
		// serviceDescriptionLabel
		serviceDescriptionLabel = new Label();
		serviceDescriptionLabel.setImmediate(false);
		serviceDescriptionLabel.setWidth("-1px");
		serviceDescriptionLabel.setHeight("-1px");
		serviceDescriptionLabel.setValue("Service Description");
		mainLayout.addComponent(serviceDescriptionLabel, 0, 2);
		mainLayout.setComponentAlignment(serviceDescriptionLabel,
				new Alignment(6));
		
		// serviceDescription
		serviceDescription = new RichTextArea();
		serviceDescription.setImmediate(false);
		serviceDescription.setWidth("-1px");
		serviceDescription.setHeight("-1px");
		mainLayout.addComponent(serviceDescription, 1, 2);
		
		return mainLayout;
	}

}
