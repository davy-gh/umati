package cz.cvut.fit.umati.ui.composite;

import java.util.Arrays;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Property;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

import cz.cvut.fit.umati.constants.ParameterType;

@org.springframework.stereotype.Component
@org.springframework.context.annotation.Scope("session")
public class ParameterPathQuestion extends CustomComponent {
	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private SemanticComposite semanticComposite;

	@AutoGenerated
	private GridLayout headLayout;

	@AutoGenerated
	private TextField parameterName;

	@AutoGenerated
	private Label parameterNameLabel;

	@AutoGenerated
	private ComboBox parameterType;

	@AutoGenerated
	private Label parameterTypeLabel;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public ParameterPathQuestion() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// Parameter Name
		parameterName.setNullRepresentation("");
		parameterName.setRequiredError("Parameter must be filled");

		// TODO: vyrobit skryvani
		// TODO: brat v uvahu fragmenty!!!
		// TODO: link na vnorene fieldy
		BeanItemContainer<ParameterType> parameterTypeContainer = new BeanItemContainer<ParameterType>(ParameterType.class, Arrays.asList(ParameterType.values()));
		parameterType.setContainerDataSource(parameterTypeContainer);
		parameterType.setImmediate(true);
		parameterType.setNullSelectionAllowed(false);
		parameterType.addListener(new Property.ValueChangeListener() {
			private static final long serialVersionUID = 1L;

			@Override
			public void valueChange(ValueChangeEvent event) {
				if (parameterType.getValue() instanceof ParameterType) {
					ParameterType value = (ParameterType) parameterType.getValue();

					if (ParameterType.FIXED.equals(value)) {
						semanticComposite.setVisible(false);
					} else {
						semanticComposite.setVisible(true);
					}
				}
			}
		});
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// headLayout
		headLayout = buildHeadLayout();
		mainLayout.addComponent(headLayout);
		mainLayout.setComponentAlignment(headLayout, new Alignment(20));
		
		// semanticComposite
		semanticComposite = new SemanticComposite();
		semanticComposite.setImmediate(false);
		semanticComposite.setWidth("-1px");
		semanticComposite.setHeight("-1px");
		mainLayout.addComponent(semanticComposite);
		mainLayout.setComponentAlignment(semanticComposite, new Alignment(24));
		
		return mainLayout;
	}

	@AutoGenerated
	private GridLayout buildHeadLayout() {
		// common part: create layout
		headLayout = new GridLayout();
		headLayout.setImmediate(false);
		headLayout.setWidth("-1px");
		headLayout.setHeight("-1px");
		headLayout.setMargin(false);
		headLayout.setSpacing(true);
		headLayout.setColumns(2);
		headLayout.setRows(2);
		
		// parameterTypeLabel
		parameterTypeLabel = new Label();
		parameterTypeLabel.setImmediate(false);
		parameterTypeLabel.setWidth("-1px");
		parameterTypeLabel.setHeight("-1px");
		parameterTypeLabel.setValue("Type of Parameter");
		headLayout.addComponent(parameterTypeLabel, 0, 0);
		
		// parameterType
		parameterType = new ComboBox();
		parameterType.setImmediate(false);
		parameterType.setWidth("-1px");
		parameterType.setHeight("-1px");
		headLayout.addComponent(parameterType, 1, 0);
		
		// parameterNameLabel
		parameterNameLabel = new Label();
		parameterNameLabel.setImmediate(false);
		parameterNameLabel.setWidth("-1px");
		parameterNameLabel.setHeight("-1px");
		parameterNameLabel.setValue("Parameter");
		headLayout.addComponent(parameterNameLabel, 0, 1);
		headLayout.setComponentAlignment(parameterNameLabel, new Alignment(6));
		
		// parameterName
		parameterName = new TextField();
		parameterName.setImmediate(false);
		parameterName.setWidth("-1px");
		parameterName.setHeight("-1px");
		parameterName.setRequired(true);
		headLayout.addComponent(parameterName, 1, 1);
		
		return headLayout;
	}
}
