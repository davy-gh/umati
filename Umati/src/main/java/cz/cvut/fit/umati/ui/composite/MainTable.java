package cz.cvut.fit.umati.ui.composite;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;

public class MainTable extends CustomComponent {
	private static final long serialVersionUID = 1L;

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table mainTable;
	@AutoGenerated
	private HorizontalLayout mainTableToolbar;
	@AutoGenerated
	private Button processWebApi;
	@AutoGenerated
	private Button editWebApi;
	@AutoGenerated
	private Button removeWebApi;
	@AutoGenerated
	private Button addWebApi;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainTable() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// mainTableToolbar
		mainTableToolbar = buildMainTableToolbar();
		mainLayout.addComponent(mainTableToolbar);
		
		// mainTable
		mainTable = new Table();
		mainTable.setImmediate(false);
		mainTable.setWidth("100.0%");
		mainTable.setHeight("100.0%");
		mainLayout.addComponent(mainTable);
		mainLayout.setExpandRatio(mainTable, 1.0f);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildMainTableToolbar() {
		// common part: create layout
		mainTableToolbar = new HorizontalLayout();
		mainTableToolbar.setImmediate(false);
		mainTableToolbar.setWidth("-1px");
		mainTableToolbar.setHeight("-1px");
		mainTableToolbar.setMargin(false);
		
		// addWebApi
		addWebApi = new Button();
		addWebApi.setCaption("Add WebApi");
		addWebApi.setImmediate(false);
		addWebApi.setWidth("-1px");
		addWebApi.setHeight("-1px");
		mainTableToolbar.addComponent(addWebApi);
		
		// removeWebApi
		removeWebApi = new Button();
		removeWebApi.setCaption("Remove WebApi");
		removeWebApi.setImmediate(false);
		removeWebApi.setWidth("-1px");
		removeWebApi.setHeight("-1px");
		mainTableToolbar.addComponent(removeWebApi);
		
		// editWebApi
		editWebApi = new Button();
		editWebApi.setCaption("Edit WebApi");
		editWebApi.setImmediate(false);
		editWebApi.setWidth("-1px");
		editWebApi.setHeight("-1px");
		mainTableToolbar.addComponent(editWebApi);
		
		// processWebApi
		processWebApi = new Button();
		processWebApi.setCaption("Process WebApi");
		processWebApi.setImmediate(false);
		processWebApi.setWidth("-1px");
		processWebApi.setHeight("-1px");
		mainTableToolbar.addComponent(processWebApi);
		
		return mainTableToolbar;
	}

}
